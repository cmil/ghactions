% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflows.R
\name{website}
\alias{website}
\title{Render and deploy a website}
\usage{
website(IDENTIFIER = "Render and Deploy RMarkdown Website",
  deploy = list(master = ghpages()))
}
\arguments{
\item{IDENTIFIER}{\code{[character(1)]}
giving the name of the action or workflow block.

Used:
\itemize{
\item as an informative label on GitHub.com,
\item in the \code{needs} fields of other \emph{action blocks} to model the workflow graph,
\item in the \code{resolves} fields of other \emph{workflow blocks} to model the workflow graph.
}}

\item{deploy}{\code{[list(1)]}
giving the name of the branch to deploy \emph{from}, and the function to deploy \emph{with}.}
}
\value{
A list as specified in the \code{workflow} argument to \code{\link[=use_ghactions]{use_ghactions()}}.
}
\description{
This workflow renders some Rmarkdown via its (custom) site generator and deploys the result.
Suitable for:
\itemize{
\item \href{https://rmarkdown.rstudio.com/lesson-13.html}{RMarkdown websites}
\item \href{https://bookdown.org}{Bookdown websites}
\item \href{https://bookdown.org/yihui/blogdown/}{Blogdown websites} (\strong{experimental})
\item any other site generators that can be called via \code{rmarkdown::render_site()} and returns the path to the rendered assets (\strong{experimental}).
}
}
\details{
Rmarkdown site generators can write to arbitary directories, and these output directory can be set in a number of places.
Happily, \code{rmarkdown::render_site()} (invisibly) returns the path to the rendered assets.
The \code{website()} workflow automatically retrieves this path, and writes it to a special \code{.deploy_dir} text file.
Downstream deploy actions such as \code{ghpages()} default to deploying from the directory specified in such a \code{.deploy_dir}.
This isn't a terribly elegant way of doing this, but because each action runs it's own container, and \emph{only} the \code{github/workspace} directory persists between them, it is currently the only way to pass the path to the deploy actions.

Users will probably never see the \code{.deploy_dir} file, and need not worry about it.
}
\section{Docker}{

This action \strong{requires a Docker image called \emph{literally} \code{repo:latest} in \code{github/workspace}.}
See \href{https://www.maxheld.de/ghactions/articles/ghactions.html}{vignette} for details.
Use \code{\link[=build_image]{build_image()}} to create one in a prior action.

This action or workflow requires that you \emph{bring-your-own-dockerfile} (byod).
There has to be a \code{Dockerfile} at the root of your repository.
It's easy to set one up using \code{\link[=use_dockerfile]{use_dockerfile()}}.
To learn more, consider the \href{https://www.maxheld.de/ghactions/articles/ghactions.html}{vignette}.
}

\seealso{
Other byod: \code{\link{rscript_byod}}
}
\concept{byod}
\concept{workflows}
