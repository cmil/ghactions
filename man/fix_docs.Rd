% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflows.R
\name{fix_docs}
\alias{fix_docs}
\title{Fix documentation}
\usage{
fix_docs(IDENTIFIER = "Fix Documentation", after_code = NULL)
}
\arguments{
\item{after_code}{\code{[character(1)]} Giving what happens when the working tree is \emph{unclean after}  \code{code} is evaluated:
\itemize{
\item \code{NULL} to throw an error or
\item \code{"commit"} to commit the changes.
Defaults to \code{NULL}, which just thinly wraps \code{\link[=check_clean_tree]{check_clean_tree()}}.
}}
}
\description{
This GitHub action creates \code{man/} documentation from \href{https://github.com/klutometis/roxygen/}{roxygen} comments in \code{R/} scripts at the repository root using \href{https://devtools.r-lib.org}{devtools}.
}
\details{
If you set \code{after_code = 'commit'} this action will automatically commit and push changes to your repository for you.
This will pollute your commit history and may cause unintended interruptions, such as merge conflicts \emph{with yourself}.
The programmatic commit will not trigger another action run, but may trigger other workflow automations (such as Travis and AppVeyor).

GitHub actions are currently available only in repos who belong to organisations or personal accounts who are on the beta.
GitHub actions always runs against the repo to which the push was made, and does not currently support pull requests.

For more caveats, see \code{\link[=auto_commit]{auto_commit()}}.
}
\examples{
workflow(
  name = "Render",
  on = "push",
  jobs = NULL
)

}
\seealso{
Other syntax: \code{\link{ghactions_events}},
  \code{\link{io}}, \code{\link{on}}
}
